{
  "id": "microservices-realm",
  "realm": "microservices-realm",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "f0643335-d7d8-404b-ab37-edd9a6b9fa37",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "microservices-realm",
        "attributes": {}
      },
      {
        "id": "5e8f4523-1ae0-4953-857e-75ec9a273fab",
        "name": "app_admin_role",
        "composite": false,
        "clientRole": false,
        "containerId": "microservices-realm",
        "attributes": {}
      },
      {
        "id": "9659396b-9a11-445a-b6b9-3e10aeee36bb",
        "name": "default-roles-microservices-realm",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "microservices-realm",
        "attributes": {}
      },
      {
        "id": "f15ed666-d01f-48b1-95f0-7db018d02c48",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "microservices-realm",
        "attributes": {}
      },
      {
        "id": "b5bce5b9-c267-434a-afc0-c3f9b6c72468",
        "name": "app_super_user_role",
        "composite": false,
        "clientRole": false,
        "containerId": "microservices-realm",
        "attributes": {}
      },
      {
        "id": "3c7a1940-8222-4611-88fb-0210783701d1",
        "name": "app_user_role",
        "composite": false,
        "clientRole": false,
        "containerId": "microservices-realm",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "9414b1da-aa6a-4bca-86db-f16136cc37d4",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "332dedea-65c0-4069-b1a9-775a5862685f",
          "attributes": {}
        },
        {
          "id": "dd57138e-fc4b-4b2f-91c2-80722008e698",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "332dedea-65c0-4069-b1a9-775a5862685f",
          "attributes": {}
        },
        {
          "id": "fbdbb75f-7267-4437-b8f5-bded116b9b70",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "332dedea-65c0-4069-b1a9-775a5862685f",
          "attributes": {}
        },
        {
          "id": "7e42c0a4-6130-407b-ab72-aea884d4a22f",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "332dedea-65c0-4069-b1a9-775a5862685f",
          "attributes": {}
        },
        {
          "id": "d81a8b7e-6c1d-486b-a683-e02d48fb19b1",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "332dedea-65c0-4069-b1a9-775a5862685f",
          "attributes": {}
        },
        {
          "id": "bf402bec-c2a0-43cc-a08c-c54d5722d5ab",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "332dedea-65c0-4069-b1a9-775a5862685f",
          "attributes": {}
        },
        {
          "id": "f0a1d5f8-3104-467e-8363-5ca916c87563",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "332dedea-65c0-4069-b1a9-775a5862685f",
          "attributes": {}
        },
        {
          "id": "826908d0-b7be-47e2-a850-889e0abc84f9",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "332dedea-65c0-4069-b1a9-775a5862685f",
          "attributes": {}
        },
        {
          "id": "eabd53dc-515c-432a-aef6-bb47b2859cfa",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "332dedea-65c0-4069-b1a9-775a5862685f",
          "attributes": {}
        },
        {
          "id": "9881a4b5-16d2-49e1-890a-c42b259481ed",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "332dedea-65c0-4069-b1a9-775a5862685f",
          "attributes": {}
        },
        {
          "id": "eeceed4e-fa79-42cf-be13-eefb96265e24",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "332dedea-65c0-4069-b1a9-775a5862685f",
          "attributes": {}
        },
        {
          "id": "f1f24b16-1be6-4ce5-be50-35b1fee0646e",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "332dedea-65c0-4069-b1a9-775a5862685f",
          "attributes": {}
        },
        {
          "id": "694de2a4-e31f-464d-a482-414008b748b8",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "332dedea-65c0-4069-b1a9-775a5862685f",
          "attributes": {}
        },
        {
          "id": "1bfcccf6-387a-4154-9359-c29eea39b4bc",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "332dedea-65c0-4069-b1a9-775a5862685f",
          "attributes": {}
        },
        {
          "id": "777df529-dafe-49cd-b469-4848deee4143",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "332dedea-65c0-4069-b1a9-775a5862685f",
          "attributes": {}
        },
        {
          "id": "5e7a3179-331f-4174-8fe6-862619d7a584",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "332dedea-65c0-4069-b1a9-775a5862685f",
          "attributes": {}
        },
        {
          "id": "91b82b16-a498-4a49-a481-77d973474c69",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "332dedea-65c0-4069-b1a9-775a5862685f",
          "attributes": {}
        },
        {
          "id": "1fa42554-428f-4d09-948b-ce40a909e41c",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "332dedea-65c0-4069-b1a9-775a5862685f",
          "attributes": {}
        },
        {
          "id": "868acb66-f12d-408d-965c-2376ee8e94ba",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-realms",
                "manage-events",
                "manage-clients",
                "view-clients",
                "view-identity-providers",
                "query-users",
                "impersonation",
                "manage-authorization",
                "manage-realm",
                "view-authorization",
                "view-events",
                "manage-users",
                "query-groups",
                "create-client",
                "manage-identity-providers",
                "view-realm",
                "view-users",
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "332dedea-65c0-4069-b1a9-775a5862685f",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "elastic-query-service": [],
      "admin-cli": [],
      "account-console": [],
      "elastic-query-web-client": [],
      "broker": [
        {
          "id": "5cab95a9-0690-45d7-b6f4-3eaddc01d76c",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "40243d28-98aa-4fb4-9c18-1a46dfe55d70",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "de39bce1-d43d-487d-8607-8d3187f69914",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "346b6a8f-ea2a-45f2-b836-ee74960ebeec",
          "attributes": {}
        },
        {
          "id": "32f9cf43-eaec-4929-9cad-fb34bd298b1c",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "346b6a8f-ea2a-45f2-b836-ee74960ebeec",
          "attributes": {}
        },
        {
          "id": "ca5daf13-0b96-4b31-ac89-7798e7b44e78",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "346b6a8f-ea2a-45f2-b836-ee74960ebeec",
          "attributes": {}
        },
        {
          "id": "9dbc3e71-1823-4405-a4b2-a84689ccae7f",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "346b6a8f-ea2a-45f2-b836-ee74960ebeec",
          "attributes": {}
        },
        {
          "id": "ce3f9bba-23b7-40a0-afea-701fd6217e26",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "346b6a8f-ea2a-45f2-b836-ee74960ebeec",
          "attributes": {}
        },
        {
          "id": "344605f3-bcdc-4459-9649-28ae0d10fbd7",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "346b6a8f-ea2a-45f2-b836-ee74960ebeec",
          "attributes": {}
        },
        {
          "id": "44261e78-aff9-46ca-b5c0-a2c77c51af17",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "346b6a8f-ea2a-45f2-b836-ee74960ebeec",
          "attributes": {}
        },
        {
          "id": "fc3ccd55-4991-4648-8ba5-5a8680772ebb",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "346b6a8f-ea2a-45f2-b836-ee74960ebeec",
          "attributes": {}
        }
      ],
      "elastic-query-web-client-2": []
    }
  },
  "groups": [
    {
      "id": "3bc2012a-9c06-456d-947c-ea9b6fec58c0",
      "name": "app_admin_group",
      "path": "/app_admin_group",
      "attributes": {},
      "realmRoles": [
        "app_admin_role"
      ],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "id": "8defe14c-f0c8-4bb0-a935-30c0f6a45c8b",
      "name": "app_super_user_group",
      "path": "/app_super_user_group",
      "attributes": {},
      "realmRoles": [
        "app_super_user_role"
      ],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "id": "6ee0c794-511a-48fa-a435-2a580dc1351c",
      "name": "app_user_group",
      "path": "/app_user_group",
      "attributes": {},
      "realmRoles": [
        "app_user_role"
      ],
      "clientRoles": {},
      "subGroups": []
    }
  ],
  "defaultRole": {
    "id": "9659396b-9a11-445a-b6b9-3e10aeee36bb",
    "name": "default-roles-microservices-realm",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "microservices-realm"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppGoogleName",
    "totpAppFreeOTPName"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "scopeMappings": [
    {
      "clientScope": "app_super_user_role",
      "roles": [
        "app_super_user_role"
      ]
    },
    {
      "clientScope": "app_admin_role",
      "roles": [
        "app_admin_role"
      ]
    },
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    },
    {
      "clientScope": "app_user_role",
      "roles": [
        "app_user_role"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "346b6a8f-ea2a-45f2-b836-ee74960ebeec",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/microservices-realm/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/microservices-realm/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "6e101d86-ddb0-4ec6-91f7-ca74c472f361",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/microservices-realm/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/microservices-realm/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "b2161a43-9da6-4645-8720-70467a3ded4c",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "971b573f-6d59-4bed-bb38-52984c3984c4",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "40243d28-98aa-4fb4-9c18-1a46dfe55d70",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "37383a0e-76ea-4b29-b3b5-4b0562d00d72",
      "clientId": "elastic-query-service",
      "baseUrl": "http://elastic-query-service-1:8183/elastic-query-service",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "rifdA1nrnTxs55bUCaG1QtivsRMxBnc3",
      "redirectUris": [
        "http://elastic-query-service-1:8183/elastic-query-service/login/oauth2/code/keycloak",
        "http://elastic-query-service-1:8183/elastic-query-service"
      ],
      "webOrigins": [
        "http://elastic-query-service-1:8183"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "access.token.lifespan": "28800",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "frontchannel.logout.session.required": "false",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml.client.signature": "false",
        "require.pushed.authorization.requests": "false",
        "saml.allow.ecp.flow": "false",
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "client.secret.creation.time": "1668595166",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "acr.loa.map": "{}",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "token.response.type.bearer.lower-case": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "b296feaa-8be8-4537-84f5-b077ec973c3f",
          "name": "kafka-streams-service",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "false",
            "access.token.claim": "true",
            "included.custom.audience": "kafka-streams-service",
            "userinfo.token.claim": "false"
          }
        },
        {
          "id": "df48d76f-b3bb-4035-a800-e381f90e342f",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "194854dc-5908-4576-af23-654d45b8f7c6",
          "name": "client-ip",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientIPAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientIPAddress",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "false"
          }
        },
        {
          "id": "b2e44608-1710-479e-ad70-05b45ba786e6",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b0e4dcb7-f680-4861-94df-c8536e78e90d",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6c939be4-4c41-4971-837c-3e77f39b127f",
          "name": "client-id",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientID",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientID",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "false"
          }
        },
        {
          "id": "0b8b0154-e4d0-4592-854b-6215b3a1ab50",
          "name": "microservices-groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-group-membership-mapper",
          "consentRequired": false,
          "config": {
            "full.path": "false",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "bbf5b6a5-93b6-40f8-8d31-41115e80dcfd",
          "name": "client-host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "false"
          }
        },
        {
          "id": "3404377a-7e8d-4125-8ea4-c33d14a7dddd",
          "name": "analytics-service",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "false",
            "access.token.claim": "true",
            "included.custom.audience": "analytics-service",
            "userinfo.token.claim": "false"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "app_admin_role",
        "app_user_role",
        "roles",
        "app_super_user_role",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c916af4f-f85b-4d83-a797-ad1d3d10ff3b",
      "clientId": "elastic-query-web-client",
      "baseUrl": "http://elastic-query-web-client:8184/elastic-query-web-client",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "c7mijoTtzma1tQR6Pfm63TpyiRQikACU",
      "redirectUris": [
        "http://elastic-query-web-client:8184/elastic-query-web-client/login/oauth2/code/keycloak",
        "http://elastic-query-web-client:8184/elastic-query-web-client"
      ],
      "webOrigins": [
        "http://elastic-query-web-client:8184"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "access.token.lifespan": "28800",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "frontchannel.logout.session.required": "false",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "false",
        "client_credentials.use_refresh_token": "false",
        "saml.client.signature": "false",
        "require.pushed.authorization.requests": "false",
        "saml.allow.ecp.flow": "false",
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "client.secret.creation.time": "1668595179",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "acr.loa.map": "{}",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "token.response.type.bearer.lower-case": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "f5d78251-2eef-4276-9f47-be517aaa70b9",
          "name": "client-host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "false"
          }
        },
        {
          "id": "6241c16a-f434-471a-a70e-92f1f0499083",
          "name": "client-id",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientID",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientID",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "false"
          }
        },
        {
          "id": "29fe6b71-d9d0-46c9-9534-b63b9b481375",
          "name": "elastic-query-service",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "false",
            "access.token.claim": "true",
            "included.custom.audience": "elastic-query-service",
            "userinfo.token.claim": "false"
          }
        },
        {
          "id": "902a9bd2-c08d-4465-a3ca-f1ab11c09e1a",
          "name": "microservices-groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-group-membership-mapper",
          "consentRequired": false,
          "config": {
            "full.path": "false",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "4aedc037-a431-40b4-8ecd-072488e4529a",
          "name": "client-ip",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientIPAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientIPAddress",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "false"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "app_admin_role",
        "app_user_role",
        "roles",
        "app_super_user_role",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b88d5502-2da0-42dc-9648-46954ef99a5f",
      "clientId": "elastic-query-web-client-2",
      "baseUrl": "http://elastic-query-web-client-2:8185/elastic-query-web-client",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "MMPQybyuiTZbgLkt6mly0f6RfraBW6eP",
      "redirectUris": [
        "http://elastic-query-web-client-2:8185/elastic-query-web-client",
        "http://elastic-query-web-client-2:8185/elastic-query-web-client/login/oauth2/code/keycloak"
      ],
      "webOrigins": [
        "http://elastic-query-web-client-2:8185"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "access.token.lifespan": "28800",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "frontchannel.logout.session.required": "false",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "false",
        "client_credentials.use_refresh_token": "false",
        "saml.client.signature": "false",
        "require.pushed.authorization.requests": "false",
        "saml.allow.ecp.flow": "false",
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "client.secret.creation.time": "1668595184",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "acr.loa.map": "{}",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "token.response.type.bearer.lower-case": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "4208d013-e0e3-4ccb-876d-3036fe72e7dd",
          "name": "elastic-query-service",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "false",
            "access.token.claim": "true",
            "included.custom.audience": "elastic-query-service",
            "userinfo.token.claim": "false"
          }
        },
        {
          "id": "a0735951-8c76-4f78-9ba6-8872dcedba1a",
          "name": "client-ip",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientIPAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientIPAddress",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "false"
          }
        },
        {
          "id": "1154280e-17f3-4005-9859-c74785a142bb",
          "name": "client-host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "false"
          }
        },
        {
          "id": "4ed28ee2-3c22-42ba-a967-588983be57e5",
          "name": "client-id",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientID",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientID",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "false"
          }
        },
        {
          "id": "adf83a0b-a73e-401c-a647-5bc442a4790a",
          "name": "microservices-groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-group-membership-mapper",
          "consentRequired": false,
          "config": {
            "full.path": "false",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "app_admin_role",
        "app_user_role",
        "roles",
        "app_super_user_role",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "332dedea-65c0-4069-b1a9-775a5862685f",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "92eb6a76-fb01-449a-80c1-02075341e585",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/microservices-realm/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/microservices-realm/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "85e1540d-0e5f-46bd-898d-7beecc4889b7",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "d1e40889-a0e8-4a75-8f74-907249fa228f",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "a23246dc-6b4a-4972-8a9a-f1752917e26e",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5dacae02-1800-40d3-8b05-959150100019",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "73dbd4b3-0fdf-4867-b1e0-bc34b4316e97",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "3f10888b-cefe-4b87-969e-fe75b9bf139b",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "15ddf2c0-1e89-4195-8356-3a864b486a78",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "ad1714a0-7554-4c05-8222-6db8af3c7a87",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "7ef368c8-aed6-4674-be43-628f408817a2",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "b88600b4-30b3-4027-bef4-f1a2fc7612d2",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "c38c83b0-b852-4f6b-95e4-d20878637905",
      "name": "app_super_user_role",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "cd01de5d-3e79-43de-86e0-febac4893094",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "cf5425b6-2263-443d-bb5e-ca0d43ab0732",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "77309461-c1ad-40e4-8020-cd03d2d4b94a",
      "name": "app_admin_role",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "c7fcf924-43c3-477f-b7dd-baa7ae7c2f59",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "7fe5df1c-3b8d-4128-a8f0-42c62b1ea680",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "13d4928b-e918-4d4e-8266-df20b9e35a95",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "a80b4b9b-55e4-4a2c-9b0f-d78f1e0984ee",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "67d5f92b-ef80-45b4-88d1-b19285a96fa2",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "11f5ee50-dba1-464e-9a2f-3f4ee148e54f",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "973b627a-d46a-4d07-9298-bdc820043326",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "638b89e1-4e6b-4af7-a37f-b7527cceafa5",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b11d4cde-489b-4101-9c92-2af4d4020a80",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5491cbdb-6689-4bcb-9989-f1c5196f30cf",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a200a86e-4dee-47ef-a428-79a788104517",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8fe6e920-0a8a-4fd0-9e49-c0be8f0cc051",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ddeb9eb1-b688-4642-bcc6-88b7f2fbc483",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a3188410-c01e-4600-9c08-b95bd8ecd228",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "76920ffc-2f95-45bc-b417-29e599c5245e",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0e4be187-b4d8-42c9-9c86-7f7469e8b2ab",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3ec0ead2-716a-48f9-8bac-156c33639ffb",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4e85922e-b66e-4e41-b1d1-a834533665e8",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "1b968262-60cc-48ad-8846-e4e46c9bfc2b",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        }
      ]
    },
    {
      "id": "351459ae-b40a-413d-a3b1-c3c134fba186",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "133e4d2f-211b-499f-8f0a-9a2870eab64b",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "36819eb7-05e3-42d5-8bb2-4a2a2ad706c9",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "31eb6fd1-9725-4cf4-96b6-845414faf859",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "d9712a40-50cd-4b6d-8970-090d5836f2ee",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "cf05ee4b-a20b-4263-b222-df43be8ccc9f",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "3c890833-2138-4641-9b64-1cfaad4c3bab",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "9b80b48e-8693-4235-988d-2cce92a36137",
      "name": "app_user_role",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "708c0e23-cfdd-4c69-b34f-f95fd6cb82b8",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper"
          ]
        }
      },
      {
        "id": "97239e8a-ec8d-412f-8ef0-2506f9fe4831",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "814acf3a-8a38-4aa5-8e19-53a32f47f700",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "62ff45d0-0ecc-4235-986a-92033cf795c9",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "a8f4f49b-aca2-443e-adc4-7de2d84dcb98",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "fa8eb7a5-4c33-43c7-8b62-788dd029715d",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "bd5c29d0-02ed-4bb9-8ffa-0f0013c763c3",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "63825cd9-cf41-4831-9b47-31f064ed0b30",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "278dbb1e-eeb7-4f30-a607-6079f7108aa7",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEA1tMXSzHqVkPy2stfkCFNh3N7yVR1NY9oa9ONOdDM/oqH7nI8fJP4pjAOvMq32OpQRoMlPJ8gj1B6GyfOlNinn4EFXP2MraWF46X878/UlMb+qZklosz3o+9BVXUGF6m0viOZhEsDaGxF/G/7t9sP402VPWF4EfPEnbSSQkm8QdfhlCYaLTU6tYnafCV28kNP1VNIQS8vuobFqP+Nn7LWiXerAW//SoWq4RWVrVCU3COV2ppi9bCHP8YdDCeZQm97EKFsqHK0xD9+zSpjp2EmoixH5YGsgsuRI1BVT8/okN6bxRtjIgpeTASRfLV3uJno8e0AulN/eCwAYuDKMy3/pwIDAQABAoIBAEJscr9lZ7fUurq8N4gxQ++l3Zia7MLq3La6auh9j2UFIJKx79H1TuTT5zqo07/Wc4vZ8SGVclPd5mOPI2kStIG1OxtNqrnmfEevg04DTQ/Tl9qI6AI2rjuaNvFdhcy7RI+mIkmtiBg5okoztflbWsZFrueTw7SJUzoQI0kr03Hn5R4zjzhdCdjc9Vy9lQN946kpoNHzguSwWUgnR/BHkTEoBKy83D2Gu05qUngQqAS+9K+nGBVz/xEMLxbjNE/LDEnWL/nD7W9ON8Ykvu4ySjRuFxKGSKIiNUxkKRp430hAPqPtrnfGvMDtVGJF9R3G3SyHiZ9pbcqEc9DQEn2IF4ECgYEA+f+X3AJrGf2hpM960Bl7O9vkZb4lJOGqQ2Iuc1wLUqdYODFJ+vUgHUXX/xv1J+DZ+PvVo9ObWZHbchiuOWX+e8htN+FCZEhJ2LP4jHpZBgluUUTlnuciaFnKHxJwYBSQ9XSicu5GMR2Bb48yi76YCiRGzaz1aWBDv2rnjK7bNikCgYEA2/tUxNamHtMb4HRV77OnV+cSyehah9z2z8mwqMXVYWkhswfq4YloeTolbBcHIrsfpv6Oej/yWsrHzF12mvJhe4gL26N2kLinb3e8PJviulWHi7Ed4gsZwQKbq2R18pcxXX6A/khRaNCYfc095sZp1HOkGbKsPt/JjQE4+J7FIU8CgYBw1xInZxwKjjXA2zmW5nl+SkFsPwgq/oTIh29p+HjP5OLn8i9vS+cj71uQNYFRb6dTP/BtUt0C79f6RvOUytmz64KIv28lLo/OdWVRmwPFusoFerCeKbuZGDYoEj2Q0JehgvS0JaKfFq9OuHbbJrsfkMI4ocHfv2i05L8A/AfMCQKBgQDX5ZMMnJ3tIsP5RjQRTQCwBNkr0B8JuJOC2y/GdGM3dzbbvqmHMJSYZbjUnMUkEQK/opWy5Y+2C86LhC8jYz7JPnxk08lJv/CUNa9IzLV4qvic4PezIbHk++pMDAy2Sizo1X9EETXU6OTAku5tz82N9PDZR8JE8t2cxdZkK27NgQKBgGJPZSWWNeoI0JzgTO1M3BjxUgAkGSHMeYw9YEwBO8FD+uMPZ2x+AtHq9HiNdhAk6ugZFnmTeP4H/J3OPVus6aAZVC4lNivixhNRrKhtZfURZWxXxQk4RnM07C11pnqXbtayGXmbOGmnb9t6wzyHVCRSCarwBrx1498wauDHgFJm"
          ],
          "certificate": [
            "MIICtTCCAZ0CBgGEhLWzuTANBgkqhkiG9w0BAQsFADAeMRwwGgYDVQQDDBNtaWNyb3NlcnZpY2VzLXJlYWxtMB4XDTIyMTExNzA4MjgzMVoXDTMyMTExNzA4MzAxMVowHjEcMBoGA1UEAwwTbWljcm9zZXJ2aWNlcy1yZWFsbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANbTF0sx6lZD8trLX5AhTYdze8lUdTWPaGvTjTnQzP6Kh+5yPHyT+KYwDrzKt9jqUEaDJTyfII9QehsnzpTYp5+BBVz9jK2lheOl/O/P1JTG/qmZJaLM96PvQVV1BheptL4jmYRLA2hsRfxv+7fbD+NNlT1heBHzxJ20kkJJvEHX4ZQmGi01OrWJ2nwldvJDT9VTSEEvL7qGxaj/jZ+y1ol3qwFv/0qFquEVla1QlNwjldqaYvWwhz/GHQwnmUJvexChbKhytMQ/fs0qY6dhJqIsR+WBrILLkSNQVU/P6JDem8UbYyIKXkwEkXy1d7iZ6PHtALpTf3gsAGLgyjMt/6cCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAmr+yjRpcoyCTimdyXKF9X8EcchUpyMiMXm1fQpNgtwhxOy6g48Q//cAPlH+nz3AOnev7BDAWd9u8LqvGO5AfpDFej9LD66tfgFiIB95RiBGZsEs2cfF+XucCMhN62wfvsGvdf3X+yq7faLikJz9UTQ9Y4HwsxOcXR3OsIgpQA9Yy1hLk7jVBaXENDlYO/XQzX805r/CGGOs8zjhLeSuQofzrqFn1RzCEOPTer0/4fbVUQ+7/8felp9HhV/qwWCkH2pvm+Wp1HwwJFTXF5t13mm2coQeIa87WKuekpXB5knvjk9myVUk4ALXA9pn8Zambt7BN0K10yqqEbaYG8CSRoA=="
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "06c8c271-7c19-4c81-a227-bf485e850753",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "7f98440d-5b85-46ac-a85c-e44e3afff21b"
          ],
          "secret": [
            "giErKzDad4nuZYnOayoAxA"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "1363d5e4-45f4-4b4a-b331-f88d29ab79f2",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "b5af9315-55a1-418a-90da-13824c91b603"
          ],
          "secret": [
            "RpHiKnZfjAWAme0C0CQnn2hyR6ia-JoPp4SckRNn5zDCSO_DKcu_zL85Z381unqjeQtgQ_MTOqY_ncaDhUnrvQ"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "3c8e6685-9ea3-4662-92fa-b92604e1aa94",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAng0WxMil1XqAPneNdYFIiGJ3qnN7endRXC20nibZ1/WdVE0t6UpwpUO0536xUaN042UMSKW2GM0qpxahkyprlN4a7orbIyb0wZ+58iUTKkP1Jy70szQThukJ9ifK3OdIOqtKMQPUKgRh9ZvsDnnDGsYiS/wCjOPV7iS8Y4dGYJ/bI0KylQJC1Sv4PPcTBmE22bcpQJrMrWC3NHNws7sXfNJwGpHXeWt5hCpmfLYGQ1jz0kA1zCSPkc/HV7i5nTVo2P4Rh95fDSQxcrGSnqXSVjb8on1c1S3EtWfDZlxwkHeI9fcFd8xygqRT4S9Oo1gBOg/0S625/O5MHub+VC5ruQIDAQABAoIBAA14v+O01xbJzufULKdzBj3Sx9CscH5VMIcHAc3XsaqT3c3PWM4ZaV3a1i8DuGVFJZvS03/XORzm0v+EQTAwNdSN9HV3+jsGMWdWICU8xgQMoBcvjE3AjvgJQc88n9DhuWE/0653HTTaJAfpew7WT9wmvopjwAtmiaf3c2PX5laqszKn8k17KIjm78n+SkHQVuB6fg17Vj1sxIF8L7slW/T5ZoPInQtGWSN2XcB0DrdGe/61oMvoNXYqCfcrmLjiODyx8kkthOTl/wQfzIS6IJdXYTsr3ZoXOsLn/T77r7OQZvYcVn3261L7soDo4iSx4tQuOQ7nPWgWQq1bUfBV2wECgYEA0c7Q7fSOU4XgNrwVh98HhxJ6FOoTwrVh25h/uROcPAjX5IFltL3lohelgL76w7D1XKloZGJFLqxOeMfXb1GTxJRrr5Wsmt98J/TRsPPg4InRKo6e/ux66XxPM2GnkddVEX+cAueJ6RI5f0VvmpS+kLNMxh1IqzdknbHd93mcTQECgYEAwNkpMiQ0NeHAY/GCwSDfa7Kq+phr6QA0QB1/nTDEJ0zNbC4+lWMta7D8Vn3ZulDwDUWbFxNz1orYnsHCwylZYInJTWpNB9RpZmtXBYgpoYD3aY2uJ6acdvrZqxkhs+E/FcBGBxHF/3qZ/9kIFIs/7lUMXjKBbxBYFtnI6tKsxrkCgYEAwGBeepHPHw6WNBnptBfwkw2CG0M2s0YVYIFIO6+bhgCl1MRBOaUVtbbw7kgvLthHYpuDOOhSfyVHHsA+7bdjQtDEnM8k4S0ibpCw5Qv5mmlD/T2g1CaJ3SU6ieZ0++jx+4WCy7b6YVdwmR5V4uuYgJ2nO9EGHNhBzcaVvKEpjAECgYBE/evlClq7ZBZGKyLSIQaNKxBMMrd4ViBbR7Jd9BJY1Psw1qKBI0genOTJtKBuLYKT3PENImJwwJ+avEsHMwXMqb6guYTxZiaHA6PQUNRD+TWKR6ukd9DGKBwzP/x0tAKzr2PeJ5ekPKJXi7d+Ugr/IuIX2Q3BRCGfmy5sBA7X0QKBgBkSf51XpWOQc5ShkpckjxRMyjh3h6l0+Uu1Yq/JVugRxgqxIzpadzXPZkVMxtp5vwrAbYd6Zb3iCm1fLrF13McZ4JHB/Kqzd/0KiVFwbSFZKs8RfkrJGm07dJwSSfTLAmAZ+/sVlTD8wRmUN4NSdjGEpcdm1wYqP14h1dTX1SCt"
          ],
          "certificate": [
            "MIICtTCCAZ0CBgGEhLW0fDANBgkqhkiG9w0BAQsFADAeMRwwGgYDVQQDDBNtaWNyb3NlcnZpY2VzLXJlYWxtMB4XDTIyMTExNzA4MjgzMVoXDTMyMTExNzA4MzAxMVowHjEcMBoGA1UEAwwTbWljcm9zZXJ2aWNlcy1yZWFsbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ4NFsTIpdV6gD53jXWBSIhid6pze3p3UVwttJ4m2df1nVRNLelKcKVDtOd+sVGjdONlDEilthjNKqcWoZMqa5TeGu6K2yMm9MGfufIlEypD9Scu9LM0E4bpCfYnytznSDqrSjED1CoEYfWb7A55wxrGIkv8Aozj1e4kvGOHRmCf2yNCspUCQtUr+Dz3EwZhNtm3KUCazK1gtzRzcLO7F3zScBqR13lreYQqZny2BkNY89JANcwkj5HPx1e4uZ01aNj+EYfeXw0kMXKxkp6l0lY2/KJ9XNUtxLVnw2ZccJB3iPX3BXfMcoKkU+EvTqNYAToP9EutufzuTB7m/lQua7kCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAcGiq2fpXv4V5lhMc7qwUHkqcV8W+4cM6YHKUfl9l4Hl49lp5nde9TXX42Y2WdFaSoTvzL1pyI0UPzskjEGyXzf6obpVmaXfpb7b1P9B9s6y5rG8riGmb/4ZD5Bv4dsM2V2GhwV2f6t91AiTWW2R1BDl9GwDPt6tiiOqRbkmlmNVjv/oNso2KMiE0Go+CanGDMkGAGS7e50ruk062DFMlS/Wi8ZjXPFyWduRyzxM1tZvtkwkI3J0j7i5wSiEpUaIzaSoOKgs8HmbGdoymJL2sJdJSiN9DSEc2PSbxsY4mfDwACyBN7MMt/aMSwAqDwwvN1g3l5R1aglZ5Ywq+TkLr0w=="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "bc259ab6-1cce-4fa4-82e3-e323a3fab56a",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "566d18d3-ed47-4cbe-878e-1fbc2d14104f",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cc507366-3ec4-45ba-9560-550026161873",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7fd60eb3-5e60-480f-9991-6bed7dc6a04a",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1b86e812-1969-4f4a-9725-5ec0cf201b8f",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f627e078-5b03-4c93-87b1-6d5d5ec4fb83",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0caefb55-daea-4c21-ad55-a52a441f8c0b",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5768cadc-b1d2-4360-9187-1a8a0a07ec83",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "85135f56-5c46-486e-886c-5485f2da3d59",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9ccb5794-a792-433d-bcae-c8801b7c9101",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3f05aa1e-7dc1-410c-9985-dfe07d29e982",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "036f66eb-c262-4e49-9f89-8de7a9bf6650",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ea0f7feb-9b1e-4b1b-b29b-6dc42f3a4591",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2e181d1c-ee94-4951-a64a-1fc88a717a31",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a2d781dc-538d-483c-a40e-b5cb041c8d63",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d15ddae5-271d-43b8-bfe0-ad6343bb99b4",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a8f3df67-5702-4fb4-a127-c62126b41e17",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ef15f972-cef5-490a-ab75-2202559cf506",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9f725304-5e9d-4573-aa9e-fa5e2ce8378c",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "99d12bb0-a404-43d7-b296-1896de12459a",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "0ff1e89c-f15a-4f51-a36c-f86719b54dbc",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "7461c8ca-11ef-4db8-a8a0-1e42d06057d1",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "20.0.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}