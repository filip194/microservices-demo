<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <property name="DEV_HOME" value="./config-server/logs"/>
    <property name="APP_NAME" value="config-server"/>

    <include resource="logback-common.xml"/>
</configuration>

<!--config-server starts with logback setup as below:-->

<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<configuration>-->
<!--<property name="DEV_HOME" value="./config-server/logs"/>-->
<!--<property name="APP_NAME" value="config-server"/>-->


<!--&lt;!&ndash;    appender that writes to console&ndash;&gt;-->
<!--<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">-->
<!--    <layout class="ch.qos.logback.classic.PatternLayout">-->
<!--        <Pattern>-->
<!--            %d{yyyy-MM-dd HH:mm:ss} %-5level [%thread] %logger{36} - %msg%n-->
<!--        </Pattern>-->
<!--    </layout>-->
<!--</appender>-->

<!--&lt;!&ndash;    appender that writes to file&ndash;&gt;-->
<!--<appender name="FILE"-->
<!--          class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--    <file>${DEV_HOME}/${APP_NAME}.log</file>-->
<!--    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--        <Pattern>-->
<!--            %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n-->
<!--        </Pattern>-->
<!--    </encoder>-->
<!--    &lt;!&ndash;        rolling policy to create new file when 10MB is reached, and to compress and keep old file&ndash;&gt;-->
<!--    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--        &lt;!&ndash; rollover daily &ndash;&gt;-->
<!--        <fileNamePattern>${DEV_HOME}/archived/${APP_NAME}-log.%d{yyyy-MM-dd}.%i.log-->
<!--        </fileNamePattern>-->
<!--        <timeBasedFileNamingAndTriggeringPolicy-->
<!--                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
<!--            <maxFileSize>10MB</maxFileSize>-->
<!--        </timeBasedFileNamingAndTriggeringPolicy>-->
<!--    </rollingPolicy>-->
<!--</appender>-->

<!--&lt;!&ndash;    log levels: trace > debug > info > warn > error &ndash;&gt;-->

<!--&lt;!&ndash;    attaching appenders to desired package with logging level&ndash;&gt;-->
<!--<logger name="com.microservices.demo" level="info" additivity="false">-->
<!--    <appender-ref ref="FILE"/>-->
<!--    <appender-ref ref="STDOUT"/>-->
<!--</logger>-->

<!--&lt;!&ndash;    root logger will set log level as a root which can be overwritten using a specific logger&ndash;&gt;-->
<!--<root level="info">-->
<!--    <appender-ref ref="FILE"/>-->
<!--    <appender-ref ref="STDOUT"/>-->
<!--</root>-->

<!--</configuration>-->