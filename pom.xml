<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.2</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <modules>
        <module>analytics-service</module>
        <module>app-config-data</module>
        <module>common-config</module>
        <module>config-server</module>
        <module>common-util</module>
        <module>discovery-service</module>
        <module>elastic</module>
        <module>elastic-query-service</module>
        <module>elastic-query-service-common</module>
        <module>elastic-query-web-client</module>
        <module>elastic-query-web-client-2</module>
        <module>elastic-query-web-client-common</module>
        <module>elastic/elastic-config</module>
        <module>elastic/elastic-index-client</module>
        <module>elastic/elastic-model</module>
        <module>elastic/elastic-query-client</module>
        <module>gateway-service</module>
        <module>kafka</module>
        <module>kafka/kafka-admin</module>
        <module>kafka/kafka-consumer</module>
        <module>kafka/kafka-model</module>
        <module>kafka/kafka-producer</module>
        <module>kafka-to-elastic-service</module>
        <module>kafka-streams-service</module>
        <module>mdc-interceptor</module>
        <module>reactive-elastic-query-service</module>
        <module>twitter-to-kafka-service</module>
        <module>reactive-elastic-query-web-client</module>
    </modules>

    <groupId>com.microservices.demo</groupId>
    <artifactId>microservices-demo</artifactId>
    <version>1.0.0-MICROSERVICES-DEMO</version>
    <name>microservices-demo</name>
    <description>Twitter Streams handled by Kafka Spring microservices</description>
    <packaging>pom</packaging>

    <properties>
        <java.version>17</java.version>

        <maven.compiler.verbose>true</maven.compiler.verbose>

        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>

        <twitter4j-stream.version>4.0.7</twitter4j-stream.version>

        <lombok.version>1.18.28</lombok.version>

        <spring-boot.version>3.1.2</spring-boot.version>
        <spring-kafka.version>3.0.9</spring-kafka.version>
        <spring-retry.version>2.0.2</spring-retry.version>
        <spring-cloud.version>4.0.3</spring-cloud.version>
        <spring-cloud-dependencies.version>2022.0.4</spring-cloud-dependencies.version>
        <spring-cloud-starter-circuitbreaker-reactor-resilience4j.version>3.0.3
        </spring-cloud-starter-circuitbreaker-reactor-resilience4j.version>

        <!--All versions are latest except for this one: starting from elastic 7.16.x Spring Boot startup gets broken, video 97, minute 3:35, XContentParser interface-->
        <elastic.version>7.17.4</elastic.version>

        <springdoc-openapi-ui.version>1.7.0</springdoc-openapi-ui.version>

        <kafka-streams.version>3.5.1</kafka-streams.version>
        <kafka-clients.version>3.5.1</kafka-clients.version>
        <kafka-avro-serializer.version>7.4.0</kafka-avro-serializer.version>
        <kafka-streams-avro-serde.version>7.4.0</kafka-streams-avro-serde.version>
        <avro.version>1.11.2</avro.version>

        <micrometer-registry-prometheus.version>1.11.3</micrometer-registry-prometheus.version>

        <logstash-logback-encoder.version>7.4</logstash-logback-encoder.version>

        <httpclient.version>4.5.14</httpclient.version>
        <json.version>20240303</json.version>
    </properties>

    <!--    needed for kafka-avro dependencies-->
    <repositories>
        <repository>
            <id>confluent</id>
            <url>https://packages.confluent.io/maven/</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- will be inherited by child pom.xml files automatically-->
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing-bridge-brave</artifactId>
        </dependency>
        <dependency>
            <groupId>io.zipkin.reporter2</groupId>
            <artifactId>zipkin-reporter-brave</artifactId>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>

            <!--SPRING-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-webflux</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <!--        RATE LIMITING is implemented by using Redis-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis-reactive</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
            </dependency>

            <!--            netflix eureka-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>
            <!--            API gateway-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-gateway</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>
            <!--        CIRCUIT BREAKER is implemented by using Resilience4j-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
                <version>${spring-cloud-starter-circuitbreaker-reactor-resilience4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-config</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-config-server</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-loadbalancer</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${spring-kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.retry</groupId>
                <artifactId>spring-retry</artifactId>
                <version>${spring-retry.version}</version>
            </dependency>

            <!--3PP-->
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${micrometer-registry-prometheus.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.annotation</groupId>
                <artifactId>jakarta.annotation-api</artifactId>
                <version>${jakarta-annotation.version}</version>
            </dependency>
            <dependency>
                <groupId>org.twitter4j</groupId>
                <artifactId>twitter4j-stream</artifactId>
                <version>${twitter4j-stream.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${avro.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-avro-serializer</artifactId>
                <version>${kafka-avro-serializer.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-streams-avro-serde</artifactId>
                <version>${kafka-streams-avro-serde.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-streams</artifactId>
                <version>${kafka-streams.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka-clients.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${elastic.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${elastic.version}</version>
            </dependency>
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback-encoder.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-ui</artifactId>
                <version>${springdoc-openapi-ui.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.json</groupId>
                <artifactId>json</artifactId>
                <version>${json.version}</version>
            </dependency>

            <!--MODULES-->
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>app-config-data</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>common-config</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>kafka</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>kafka-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>kafka-admin</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>kafka-producer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>kafka-consumer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>elastic-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>elastic-config</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>elastic-index-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>elastic-query-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>common-util</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>elastic-query-service-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>elastic-query-web-client-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>reactive-elastic-query-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>mdc-interceptor</artifactId>
                <version>${project.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <compilerArgs>
                        <!--<arg>-verbose</arg>-->
                        <arg>-Xlint:unchecked</arg>
                    </compilerArgs>
                    <!--                    <release> property is used from Java 9 forward instead of <source> and <target> properties for Java 8 and below.-->
                    <!--                    <source>${java.version}</source>-->
                    <!--                    <target>${java.version}</target>-->
                    <release>${java.version}</release>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
